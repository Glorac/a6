/**
 * a6-csvToX.js
 * @author @MatthewEckart
 * @file A function that converts CSV files to JSON, XML, or TSV format.
 */

// Load relevant modules.
const fs = require('fs');
const csvConverter = require('a6-csvConverter')

/**
 * @function csvToX
 * @summary Converts a CSV file to a file containing JSON, XML, or TSV data.
 * @param {string} csvPath - the path to the source CSV file
 * @param {string} outputPath - the path at which data should be output
 * @param {string} dataType - JSON, XML, or TSV
 * @requires fs
 * @requires a6-csvConverter
 */
const csvToX = async function (csvPath, outputPath, dataType) {
	if (dataType != 'JSON' && dataType != 'XML' && dataType != 'TSV') {
		console.log('That was an incorrect data type. Please try again.');
		end();
	}

	try {
		// Initialize
		const readStream = fs.createReadStream(csvPath);
		const writeStream = fs.createWriteStream(outputPath);
		const converter = new csvConverter();
		const startTime = new Date().getTime();
		let data_start = true;
		
		// Read the CSV file as data enters buffer.
		readStream.on('readable', () => {		
			let d;
			
			// Loop while data exists in buffer.
			while (null !== (d = readStream.read())) {
				let converted;
			
				// Grab Headers and initialize Converter Object.
				if (data_start) {
					let headers = d.toString().split('\n')[0].split(',');
					converter.setHeaders(headers);
					data_start = false;
					
					converted = (dataType == 'XML' ? '<document>' : '') + converter.toX(dataType, d, 1);
				} else converted = converter.toX(dataType, d);
				
				// Write to output file.
				if (converted) {
					writeStream.write(converted, (err) => {
						if (err) console.log(err);
					});
				}
			}
		});

		// End gracefully.
		readStream.on('end', () => {			
			if (dataType == 'XML') fs.appendFileSync(outputPath, '</document>');
			
			const endTime = new Date().getTime();
			const processTime = endTime - startTime;
			let lineCount = converter.getLineCount();
			
			if (dataType == 'TSV') lineCount = 'All';
			
			console.log(`\nThe operation has completed, and a ${dataType} file has been written to ${outputPath}.`);
			console.log(`${lineCount} lines were processed over ${processTime} milliseconds.`);
			end();
		});

		// Log Errors
		// (end not-so-gracefully)
		readStream.on('error', e => {
			end(e);
		});
		writeStream.on('error', e => {
			end(e);
		});
	} catch (e) {
		end(e);
	}
}

/**
 * @function end
 * @summary Ends and exits the process.
 * @param {error} e - any errors that may have caused the process to end.
 */
const end = function (e) {
	if (e) {
		console.log(e); 
		console.log("\nLooks like that didn't go quite according to plan...");
		process.exit(1);
	}
	process.exit(0);
}

module.exports = csvToX;
